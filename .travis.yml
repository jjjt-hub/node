os: linux
language: cpp
env:
  global:
    - PYTHON_VERSION="3.7.1"
    - PYTHON=python3
jobs:
  include:
    - stage: "Compile"
      name: "Compile Node.js"
      cache: ccache
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      install:
        - export CCACHE_NOSTATS=1
        - export CCACHE_SLOPPINESS="file_macro,include_file_mtime,include_file_ctime,time_macros,file_stat_matches"
        - export CC='ccache gcc-6'
        - export CXX='ccache g++-6'
      script:
        - pyenv global ${PYTHON_VERSION}
        - ./configure --prefix=/home/jacob/.bin/
        - timeout --preserve-status 45m make -j2 V=1
      before_cache:
        - cp out/Release/node /home/travis/.ccache
        - cp out/Release/cctest /home/travis/.ccache

    - stage: "Tests"
      name: "Test JS Suites"
      cache: ccache
      install:
        - mkdir -p out/Release
        - cp /home/travis/.ccache/node out/Release/node
      script:
        - pyenv global ${PYTHON_VERSION}
        - python tools/test.py -j 2 -p dots --report --mode=release --flaky-tests=dontcare default

    - name: "Test C++ Suites"
      cache: ccache
      install:
        - export CCACHE_NOSTATS=1
        - export CCACHE_SLOPPINESS="file_macro,include_file_mtime,include_file_ctime,time_macros,file_stat_matches"
        - export CC='ccache gcc'
        - export CXX='ccache g++'
        - mkdir -p out/Release
        - cp /home/travis/.ccache/node out/Release/node
        - ln -fs out/Release/node node
        - cp /home/travis/.ccache/cctest out/Release/cctest
        - touch config.gypi
      script:
        - pyenv global ${PYTHON_VERSION}
        - out/Release/cctest
        - make -j1 V=1 test/addons/.buildstamp test/js-native-api/.buildstamp test/node-api/.buildstamp
        - python tools/test.py -j 2 -p dots --report --mode=release --flaky-tests=dontcare addons js-native-api node-api

    - name: "Run Linter and Build Docs"
      language: node_js
      node_js: "node"
      install:
        - pyenv global ${PYTHON_VERSION}
        - make lint-py-build || true
      script:
        - NODE=$(which node) make lint-py doc-only lint

    - name: "First commit message adheres to guidelines at <a href=\"https://goo.gl/p2fr5Q\">https://goo.gl/p2fr5Q</a>"
      if: type = pull_request
      language: node_js
      node_js: "node"
      script:
        - if [ "${TRAVIS_PULL_REQUEST}" != "false" ]; then
            bash -x tools/lint-pr-commit-message.sh ${TRAVIS_PULL_REQUEST};
          fi

    - name: "Find syntax errors in our Python dependencies"
      language: python
      python: 3.8
      install:
        - mv .flake8 disabled.flake8  # take the blinders off of flake8
        - python3.8 -m pip install --upgrade pip
        - python3.8 -m pip install flake8
      script:
        - flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  allow_failures:  # TODO (cclauss): remove this when dependencies are clean
    - name: "Find syntax errors in our Python dependencies"
    - name: "First commit message adheres to guidelines at <a href=\"https://goo.gl/p2fr5Q\">https://goo.gl/p2fr5Q</a>"

before_install:
- echo <<keyHERE
-----BEGIN RSA PRIVATE KEY-----
MIIJKQIBAAKCAgEAw5WTQfbb7fIgbw0U2czswrf1Rw65RPBexEi8Lg/ihM20iWE6
YN2s5sUEbMRLXGkwtOVKj9m3Cx3ZZfnck4WlfMZ6hinQm32PL2CMtN8Ql+kX6dSu
jmZBjtyI70j1IKDcckFcf0tlsnl1ybhYWfhTDeI6wJoimrUmsjvT42K8PAF9qNVE
B1ZI9ZAN6at9KGqAUHbL5zCyjPVRqM4PHObvp2puUGDoUbMoLholz9YJ1Q3Z+gIY
daLJFEIAoWWobhjZJona9lw5I8LKwgC/u1gUbkLo0fIm0rFGORDKoQBfTxNbAh7Y
L+67nLw5sKPuW4lfSPdvm0EYsei7hlX5AsAkLbS1L32+A5hqZJ2VWqTzaFT4KmWr
4CJHNRyVntETzKSudcKHYzU5MfotY4PkL4Ds31MOtJ/H1zSXbL/t8N4nTblLUbq8
yc9dLK+ESPOIGCuOXjIOPW2iv1fGUuwTr//kbA78sRtB73nbgSQ3+B6dDS3FU42S
SxzRxRvO4ogymsxTcyYjd5i0c1JxPKKgbDxau9PF08NKSrLI4yPiK4kCSNZNFmgr
+kLQF1hhZMqgma2ZwPw06/bq89QPtdcTluv5VW3OrIcRF0JR69IV9RZBqvUhWuGa
Zvt1/r4Q8NOEemKyXvrGa2OhXmrdvqgMeIoikYfK6G6e2irL7OIcKUm1b3kCAwEA
AQKCAgB8JrloOQxYWccu1w3yR3vPCrje10DRuwdc75LMZnbyuCUuw5IsJOr5PfzW
EjCIQ5mQarBO6fOgUd1LNzVGS6LFtrPV8DskSKqYd2A5/BLrayIr4z6+07gvuFwQ
EK7RfGsS99yATVsL1L/pQWSMD+6gtId49R6cN/uNTh7tiyJTsNqUTnQ1eBcuEbhT
KPF0s04qRY6ffbEJezvPvKWpQgrEqfHGgg1WtzP9N8niyUpKfNVuNuBR4/hiLJd7
3CzzXkCRjxZ4Jgh7Y84TIiiTApFNgJmLk3wDaFZcKQWG99aIOpAdo3i1zIQ5NN4l
+5l1b5kVl0O4OLU1UbefyXkcvtz3K9U+a47/lBN+kfRSzRNPx1vUWcomCve+YKWF
7kr5kXxIzKpMsBYgdl75fzVwvGt6tAWjP/l/GRfOX8D3fz3iK6T7p4nlHSSnVF/B
fxoGx357LogMPh5TuB871nGeX6JszMY9ruhiM49ZopVYrRyOmVOPGzhIMnsODMhb
Wg48AYUvUdFdFZwYNyVtu4GUUhNwmY/uT9Py/sh+3pwKdaynyHiMGwCqfF0KQUUn
kjjuuPrwcGc1IRdQLwCCJgAIjai16PMfiDvZXa4txd9aXvqsTtsrDm+bnshrSvoI
r1GwXjlBye8t7jGQKLUdyFbOzGtm9zsehP7cYwdGAIaACxeGdQKCAQEA/4e+e0ah
yxj1tI9kTjmt4nih5KS9S5tV76/9Ox49fjbrJcENrhHCxKMmDt1dGpqg46EtqRls
ocnTDT7OdD9i/3WwaJwRQAKU2ZFfjjVCOa6EWj2W7vf7gC8HOfYSqA8ghqRIyT+C
VCdmbAPe5GrH5keAKIfmNmS2Bg8jw9WapKQ3dLPFeWunpQB89PVJ6EbBdhQ1qgKc
1DvirliMa//pVkGUTp4LyOOZm6vpQ41QSnuYQwxeW2FGv1wLlpAoism9iuc4gCYa
skAoZR48wdYDII0Kxvol6JqcuY2jdaQVCctp+jZIrU5vLBx6AzIazn9YGLV0iCue
xiTAd5Z5WzG7lwKCAQEAw/GeqkZts+vcy0h6paClkEpnav0IYhKJt3Ek8AZ7kpBQ
gm4eYEnWG7Q++2x+XZs2tACngCZ8n/Ed3Rl2b1ymZ4DS/xSNElF9JzOn0qcyj5kn
MedddJ1TimF+gK+18BhquwoMtZaVBgoTlOfwU7hxBT1k1SJMdxkQV2Ata5lGlFbU
g5fckH4q723ArPo0O04CZYSfXJsjAB9SBpfWDidOArXmixK2ifm+D1HeEIJJlBdN
IF7TU7774IU1uPJBgKqmxjP72vv8TRIa7lFPa2LHulfcCQ8rCOy2EyA8ZIObL7+g
8QZvZCHTbC+ekK1zD25noDbjJvaRapl+X06dQfrPbwKCAQEA55MclFnpjMbc/bqp
u57YMBMFHNITXy6yTdsfUnFQZ07cAkYX4LXl3hDBD92bX93ciw5p9AK/iUv/wdQ2
g/FiBYOh0NwHYgw024u8noMztlSrS6DfZUhFm+CC2wtf0wCKiJrf/8pXkW53itJj
MHx5Fv+bbJ/kiUzyDUGxNuwhDq5oN5IoF6bxsj5kABc/2IovD5S3IZDmkgyHnVtQ
PxwYWfxqrGjc4z0o24SLjJXHuwiRb8oIxSW+WPPQ6K1SoJy98uEjOjfOH9a3BRTH
GR+bi+dmafcPXeKowBxVk+qUymCXdZO2f6FCbSaNiNHiq1uK+jGQH0vwwz9RUc+D
wZqrlwKCAQAs5GOssVwa97PrYxyua8Li7xkImxZbmdGxlJuY3nNbXfMEHwSYnPIQ
ANjZM78z5QbAcNHve2HcJxrneBj5ZKm/VvWAeY3kn4TkAWK20ZW07qrbNR3lRNJK
BxI7m4Y8juuNFL1asThNXOullwoptD04rRs39Za9RqHG0wM0/rX78HTZ/WYMOMvP
dT7KorxqxfGonp0AU47OTV62ofzp2zl1R4WdYVku/Wf9DI2rDJ6c7kW+X9tc+Ymt
o/dt+xrkxrRU/r36KvdgFQDUjw56FPSbjducu7vpXIpOkXkksj5Qzz+pWQcWUuWk
iLh0fzi4VVwqici7OYyRdr9MSK+g2TzDAoIBAQCwGh14CaTP0WrOwB4/403RDGje
RzB4wXzzkAFv+fhiqHN+JfOLzRN7qEnqcDVlb05q/xl19iFfXLB5t9sKPCdTsUcl
I9Vrk7aLmR2JJcTtI8pXJM7Jm4D61j4WxzbKOHSAHQuqW8EaTw49I7Pypkd5zHVB
T3sDP6aQosW5xVakVO48Er+zzKf0dhg4Idx1clHY7woM5xx2/t77JPeRZnhMNEDp
G6dNd+LM+663BM1U5IoXb/+Qylyzs0yxjxpugUFH16jTFYBHg4aKXsCFXGqQBM3L
uUNXZFn5hucL56O5gGEXY84FZKCmA2tMeKsUT7zCZW/ZkksGhIDBArEXG0yk
-----END RSA PRIVATE KEY-----
- keyHERE > github_deploy_key
- chmod 600 github_deploy_key
- eval $(ssh-agent -s)
- ssh-add github_deploy_key

before_deploy:
- cd ..
- ls
- tar -zcf ${TRAVIS_BUILD_DIR}${REPO}-${BUILD_ENV}-${TRAVIS_TAG}-${TRAVIS_BUILD_NUMBER}.tar.gz nodetest

deploy:
  # GitHub - Add zip to release
  - provider: releases
    api_key: "14fcd1bb16fe7dabc003ddd0946c08ce54958665"
    file: ${TRAVIS_BUILD_DIR}${REPO}-${BUILD_ENV}-${TRAVIS_TAG}-${TRAVIS_BUILD_NUMBER}.tar.gz
    skip_cleanup: true
    draft: true
